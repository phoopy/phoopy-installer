#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import zipfile
import json
import re
import stat

try:
    from StringIO import StringIO as IOWrapper
    from urllib2 import urlopen
except ImportError:
    from io import BytesIO as IOWrapper
    from urllib.request import urlopen

tags = json.loads(urlopen('https://api.github.com/repos/phoopy/phoopy-skeleton/git/refs/tags?per_page=100').read().decode('utf-8'))
tags = list(reversed([re.sub(r'(refs/tags/)(.*)', r'\2', t['ref']) for t in tags]))

error_message = """
Usaage:
    {} FOLDER [VERSION]

Available Versions:
    {}
""".format(sys.argv[0], ', '.join(tags))

for arg in sys.argv:
    if arg in ['help', '--help', '-help', '-h', '--h']:
        print(error_message)
        exit(0)

if len(sys.argv) < 2:
    print(error_message)
    exit(1)

if len(sys.argv) > 2 and sys.argv[2] not in tags:
    print(error_message)
    exit(1)

latest = None
for entry in tags:
    if latest is None:
        latest = entry
        continue

    if int(latest.replace('.', '')) > int(entry.replace('.', '')):
        continue

    latest = entry

folder_name = sys.argv[1]
version = sys.argv[2] if len(sys.argv) == 3 else latest
installed_folder_name = 'phoopy-skeleton-{}'.format(version)

print('Downloading')
r = urlopen('https://github.com/phoopy/phoopy-skeleton/archive/{}.zip'.format(version))
z = zipfile.ZipFile(IOWrapper(r.read()))
z.extractall()

print('Installing')
os.rename('./{}'.format(installed_folder_name), './{}'.format(folder_name))

be_executables = [
    './{}/bin/console'.format(folder_name),
    './{}/test/functional/console_mock.py'.format(folder_name)
]

for file in be_executables:
    st = os.stat(file)
    os.chmod(file, st.st_mode | stat.S_IEXEC)

final_message = """
Final steps:
    1. Enter in the folder {}
        1.1 `cd {}`
    2. Install the dependencies:
        2.1 `pip install -r requirements.txt`
        2.2 `pip install -r requirements-dev.txt`
    4. Create your parameters.yml
        4.1 `cp app/config/parameters.yml.dist app/config/parameters.yml`
    5. Run
        5.1 `bin/console app:hello_world`
    6. Test
        6.1 `phulpy test`
""".format(folder_name, folder_name)

print(final_message)
